DROP DATABASE IF EXISTS companyDB;
CREATE DATABASE companyDB;
USE companyDB;

-- Create Department Table
CREATE TABLE department (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(50)
);

-- Create Employee Table
CREATE TABLE employee (
    emp_id INT AUTO_INCREMENT PRIMARY KEY,
    emp_name VARCHAR(100),
    salary DECIMAL(10,2),
    dept_id INT,
    FOREIGN KEY (dept_id) REFERENCES department(dept_id)
);

-- Insert sample data
INSERT INTO department VALUES
(1, 'HR'),
(2, 'IT'),
(3, 'Finance');

INSERT INTO employee (emp_name, salary, dept_id) VALUES
('John', 40000, 1),
('Alice', 60000, 2),
('Bob', 75000, 2),
('Emma', 85000, 3),
('Ryan', 30000, 1);

-- 1. Simple view: employee name and salary
CREATE OR REPLACE VIEW view_simple AS
SELECT emp_name, salary FROM employee;

-- 2. Complex view: join with department
CREATE OR REPLACE VIEW view_join AS
SELECT e.emp_name, e.salary, d.dept_name
FROM employee e
JOIN department d ON e.dept_id = d.dept_id;

-- 3. View using aggregate: total salary by department
CREATE OR REPLACE VIEW view_aggregate AS
SELECT d.dept_name, SUM(e.salary) AS total_salary
FROM employee e
JOIN department d ON e.dept_id = d.dept_id
GROUP BY d.dept_name;

-- 4. View using nested query: employees with salary above average
CREATE OR REPLACE VIEW view_nested AS
SELECT emp_id, emp_name, salary
FROM employee
WHERE salary > (SELECT AVG(salary) FROM employee);

-- 5. View with CHECK OPTION (only HR employees)
CREATE OR REPLACE VIEW view_hr_only AS
SELECT * FROM employee
WHERE dept_id = 1
WITH CHECK OPTION;

-- ✅ Try updating through view_hr_only (will work)
UPDATE view_hr_only SET salary = 45000 WHERE emp_name = 'Ryan';

-- ❌ Try updating Ryan's dept_id to 2 (will fail due to CHECK OPTION)
-- UPDATE view_hr_only SET dept_id = 2 WHERE emp_name = 'Ryan';

-- View all results
SELECT * FROM view_simple;
SELECT * FROM view_join;
SELECT * FROM view_aggregate;
SELECT * FROM view_nested;
SELECT * FROM view_hr_only;
